name: Ultimate Containerized Ecosystem CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lyra/trading-system
  TOTAL_SERVICES: 71
  AI_CONSENSUS: 75.0%

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tier: ['tier_1_core', 'tier_2_ai', 'tier_3_exchanges', 'tier_4_strategies', 'tier_5_risk', 'tier_6_hummingbot', 'tier_7_security', 'tier_8_compliance', 'tier_9_monitoring', 'tier_10_interface', 'tier_11_notifications', 'tier_12_data']
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/test.txt
    
    - name: Run tier tests
      run: |
        pytest tests/${{ matrix.tier }}/ --cov=src/${{ matrix.tier }}/ --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          "database",
          "redis",
          "message_queue",
          "config_manager",
          "health_monitor",
          "ai_consensus",
          "model_router",
          "prompt_manager",
          "response_analyzer",
          "exchange_manager",
          "okx_service",
          "binance_service",
          "kraken_service",
          "gateio_service",
          "whitebit_service",
          "swyftx_service",
          "btcmarkets_service",
          "coinbase_service",
          "bitfinex_service",
          "huobi_service",
          "independent_reserve",
          "strategy_engine",
          "ai_momentum",
          "cross_arbitrage",
          "market_making",
          "triangular_arbitrage",
          "mean_reversion",
          "twap_vwap",
          "basket_rebalancing",
          "statistical_arbitrage",
          "dca_strategy",
          "event_driven",
          "grid_trading",
          "cash_carry",
          "funding_rate",
          "margin_arbitrage",
          "hedged_making",
          "covered_calls",
          "volatility_plays",
          "risk_engine",
          "position_manager",
          "stop_loss",
          "drawdown_monitor",
          "hummingbot_core",
          "strategy_orchestrator",
          "performance_tracker",
          "hb_config_manager",
          "vault_manager",
          "encryption_service",
          "key_rotation",
          "audit_logger",
          "ato_reporter",
          "gst_calculator",
          "audit_trail",
          "compliance_checker",
          "prometheus",
          "grafana",
          "loki",
          "alertmanager",
          "main_dashboard",
          "trading_interface",
          "analytics_ui",
          "admin_panel",
          "telegram_bot",
          "email_service",
          "sms_gateway",
          "webhook_manager",
          "data_ingestion",
          "data_processor",
          "analytics_engine",
          "backup_manager"
        ]
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./containers/Dockerfile.${{ matrix.service }}
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }-${{ matrix.service }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.10.0'
    
    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install lyra-trading ./helm-chart \
          --namespace lyra-trading \
          --create-namespace \
          --set global.imageTag=${{ github.sha }} \
          --set aiConsensus.consensus_strength=0.75 \
          --wait --timeout=10m
    
    - name: Verify deployment
      run: |
        kubectl get pods -n lyra-trading
        kubectl get services -n lyra-trading
        echo "Total services deployed: 71"
        echo "AI consensus strength: 75.0%"
